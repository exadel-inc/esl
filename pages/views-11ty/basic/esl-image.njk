---
layout: basic
title: ESL Image component
name: Esl Image
containerCls: container
tags: basic
---
{% set imageSrcBase = '/assets/' | url %}

<section class="row">
  <div class="col-12">
    <h3 class="text-center">Mods</h3>
    <div class="demo row">
      <div class="col-xs-12 col-sm-6 p-2">
        <esl-image mode="save-ratio" lazy
                   data-alt="Alt Text Test"
                   data-src="nature/forest+clouds.jpg"
                   data-src-base="{{ imageSrcBase }}"></esl-image>
      </div>
      <div class="col-xs-12 col-sm-6 p-2 d-flex">
        <div class="m-auto">
          <h5>Mode: save-ratio</h5>
          <p>ESL Image uses entire available width and occupies the height according to image aspect ratio.</p>
          <p>No inner image, css background is used to render the image.</p>
        </div>
      </div>
    </div>
    <hr/>
    <div class="demo row">
      <div class="col-xs-12 col-sm-6 p-2 d-flex">
        <div class="m-auto">
          <h5>Mode: cover</h5>
          <p>No inner image, image is rendered by background image.</p>
          <p>ESL Image has no own size. Can be used with img-container classes</p>
          <p><i>Example:</i></p>
          <code>&lt;div class="img-container img-container-4-3"&gt; &lt;esl-image ...</code>
        </div>
      </div>
      <div class="col-xs-12 col-sm-6 p-2">
        <div class="img-container img-container-4-3">
          <esl-image mode="cover" lazy
                     data-alt="Alt Text"
                     data-src="nature/forest+clouds.jpg"
                     data-src-base="{{ imageSrcBase }}"></esl-image>
        </div>
      </div>
    </div>
    <div class="demo row" id="sim-valign-test">
      <div class="col-xs-12 col-sm-6 p-2 d-flex">
        <div class="img-container m-auto" style="width: 400px; height: 200px; border: 1px solid gray;">
          <esl-image mode="cover" lazy
                     data-alt="Alt Text"
                     data-src="nature/forest+clouds.jpg"
                     data-src-base="{{ imageSrcBase }}"></esl-image>
        </div>
      </div>
      <div class="col-xs-12 col-sm-6 p-2 d-flex">
        <div class="m-auto">
          <h5>Mode: cover (additional classes: vertical alignment)</h5>
          <p>As background-image is used to render image in cover mode we can control image cropping options
            through the css.</p>
          <p>The following options are available to control image vertical position:</p>
          <ul>
            <li><input name="v-pos-test" type="radio" class="v-pos-toggle" value="bg-v-top"/> .bg-v-top</li>
            <li>
              <input name="v-pos-test" type="radio" class="v-pos-toggle" value="bg-v-center" checked/> .bg-v-center <b>(default)</b>
            </li>
            <li><input name="v-pos-test" type="radio" class="v-pos-toggle" value="bg-v-bottom"/> .bg-v-bottom</li>
          </ul>
          <div><b>Container:</b><span class="value">size: 400 x 200px; gray border</span></div>
        </div>
      </div>
      <script>
        (function () {
          var area = document.querySelector('#sim-valign-test');
          var cbx = area.querySelectorAll('.v-pos-toggle');
          var sim = area.querySelector('esl-image');
          Array.prototype.forEach.call(cbx, function (cb) {
            cb.addEventListener('click', function () {
              var cl = sim.classList;
              cl.remove('bg-v-top');
              cl.remove('bg-v-center');
              cl.remove('bg-v-bottom');
              cl.add(cb.value);
            });
          });
        })();
      </script>
    </div>
    <div class="demo row" id="sim-halign-test">
      <div class="col-xs-12 col-sm-6 p-2 d-flex">
        <div class="img-container m-auto" style="width: 200px; height: 300px; border: 1px solid gray;">
          <esl-image mode="cover" lazy
                     data-alt="Alt Text"
                     data-src="nature/forest+clouds.jpg"
                     data-src-base="{{ imageSrcBase }}"></esl-image>
        </div>
      </div>
      <div class="col-xs-12 col-sm-6 p-2 d-flex">
        <div class="m-auto">
          <h5>Mode: cover (additional classes: horizontal alignment)</h5>
          <p>The following options available to control image horizontal position:</p>
          <ul>
            <li><input name="h-pos-test" type="radio" class="h-pos-toggle" value="bg-h-left"/> .bg-h-left</li>
            <li>
              <input name="h-pos-test" type="radio" class="h-pos-toggle" value="bg-h-center" checked/>
              .bg-h-center <b>(default)</b>
            </li>
            <li><input name="h-pos-test" type="radio" class="h-pos-toggle" value="bg-h-right"/> .bg-h-right</li>
          </ul>
          <div><b>Container:</b><span class="value">size: 200 x 300px; gray border</span></div>
        </div>
      </div>
      <script>
        (function () {
          var area = document.querySelector('#sim-halign-test');
          var cbx = area.querySelectorAll('.h-pos-toggle');
          var sim = area.querySelector('esl-image');
          Array.prototype.forEach.call(cbx, function (cb) {
            cb.addEventListener('click', function () {
              var cl = sim.classList;
              cl.remove('bg-h-left');
              cl.remove('bg-h-center');
              cl.remove('bg-h-right');
              cl.add(cb.value);
            });
          });
        })();
      </script>
    </div>
    <div class="demo row">
      <div class="col-xs-12 col-sm-6 p-2 d-flex">
        <div class="img-container m-auto" style="width: 300px; height: 150px; border: 1px solid gray;">
          <esl-image mode="cover" lazy
                     class="bg-inscribe"
                     data-alt="Alt Text"
                     data-src="nature/volcano-md.jpg | @2x => nature/volcano.jpg"
                     data-src-base="{{ imageSrcBase }}"></esl-image>
        </div>
      </div>
      <div class="col-xs-12 col-sm-6 p-2 d-flex">
        <div class="m-auto">
          <h5>Mode: cover (additional classes: inscribe)</h5>
          <p><em>bg-inscribe</em> can be used to declare inscribe image behaviour</p>
          <div><b>Container:</b><span class="value">size: 300 x 150px; gray border</span></div>
        </div>
      </div>
    </div>
    <hr/>

    <div class="demo row">
      <div class="col-xs-12 col-sm-6">
        <div class="img-container img-container-16-9">
          <esl-image mode="fit" lazy
                     data-alt="Alt Text Test"
                     data-src="nature/volcano-md.jpg | @2x => nature/volcano.jpg"
                     data-src-base="{{ imageSrcBase }}"></esl-image>
        </div>
      </div>
      <div class="col-xs-12 col-sm-6 p-2 d-flex">
        <div class="m-auto">
          <h5>Mode: fit</h5>
          <p>ESL Image uses inner <em>img</em> to render picture and is used as a wrapper that controls
            image source and state.</p>
        </div>
      </div>
    </div>
    <hr/>
    <div class="demo row">
      <div class="col-xs-12 col-sm-6 d-flex">
        <esl-image mode="origin"
                   class="m-auto"
                   data-alt="Alt Text Test"
                   data-src="nature/volcano-xs.jpg"
                   data-src-base="{{ imageSrcBase }}"></esl-image>
      </div>
      <div class="col-xs-12 col-sm-6 p-2 d-flex">
        <div class="m-auto">
          <h5>Mode: origin</h5>
          <p>Origin mode behaves similarly to the fit mode but sets esl-image size according to inner image
            original size.</p>
        </div>
      </div>
    </div>
  </div>
</section>
<hr/>
<section class="row">
  <div class="col-12">
    <h3 class="text-center">ESL Query Rules</h3>
  </div>
  <div class="col-12">
    <div class="img-container img-container-16-9">
      <esl-image lazy
                 mode="cover"
                 onload="console.log('SImage Load Track', event)"
                 onready="console.log('SImage Ready Track', event)"
                 data-alt="Alt Text Test"
                 data-src="@XS => abstract/colors.jpg |
                                   @SM => abstract/drops.jpg |
                                   @MD => abstract/unsplash.jpg |
                                   @LG => abstract/colors.jpg |
                                   @XL => abstract/drops.jpg"
                 data-src-base="{{ imageSrcBase }}"></esl-image>
    </div>
  </div>
</section>
<hr/>
<section class="row m-0">
  <div class="col-12">
    <h3 class="text-center">SVG Inline loading <span class="badge badge-warning">Beta</span></h3>
    <div class="d-flex p-2">
      <div class="mx-auto">
        <h5>Mode: inner-svg, lazy mode</h5>
        <p>ESL Image inner-svg mode that loads svg content inline.</p>
        <p class="alert alert-warning">NOTE: requesting svg endpoint should accept CORS policy restrictions</p>
      </div>
    </div>
    <div class="img-container img-container-4-3">
      <esl-image lazy
                 mode="inner-svg"
                 data-alt="Svg Text Test"
                 data-src="{{ '/assets/svg/cat.svg' | url }}"></esl-image>
    </div>
  </div>
</section>
