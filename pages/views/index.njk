---
layout: basic
title: Exadel Smart Library
containerCls: container
ui_playground: github.com/exadel-inc/ui-playground
---

<div class="d-flex flex-column flex-md-row align-items-center">
  <div class="brand-section logo-primary mr-2">{% include "img/logo.svg" %}</div>
  <p class="m-0 lead description">
    Exadel Smart Library (<strong>ESL</strong>) is a web components based library that gives you a set of <strong>lightweight</strong>
    and <strong>flexible</strong> custom elements to easily create basic UX modules and make your websites super fast.
  </p>
</div>
<hr/>

<h3 id="components">List of components</h3>
<ul class="list-inline">
  {% for item in collections.basic | sortByName %}
    <li class="list-inline-item"><h5><a href="{{ item.url | url }}">{{ item.data.name }}</a></h5></li>
  {% endfor %}
</ul>

<h3 id="form-components">Form Components</h3>
<ul class="list-inline">
  {% for item in collections.forms | sortByName %}
    <li class="list-inline-item"><h5><a href="{{ item.url | url }}">{{ item.data.name }}</a></h5></li>
  {% endfor %}
</ul>
<hr/>

<h2 id="installation-guide">Installation Guide</h2>
<div class="container">
  <ol>
    <li>
      <p>Preconditions:</p>
      <ul class="container">
        <li>
          Make sure you have all needed polyfills to support browsers from your browser-support list.
          See <i>Browser support &amp; Polyfills</i> for details.
        </li>
        <li>
          Use bundler to build your project. Currently, only ESL modules are available for consumption.
        </li>
      </ul>
    </li>
    <li>
      <p>Install <a href="https://www.npmjs.com/package/@exadel/esl">esl npm dependency</a>:</p>
      <pre><code>npm i @exadel/esl --save</code></pre>
    </li>
    <li>
      <p>Import Components/Modules you need.</p>
      <ul class="container">
        <li>
          <code>core</code> module entry usually represents main part of the module
          <pre><code class="lang-javascript"><span class="hljs-attribute">import</span> <span class="hljs-string">'<span
            class="hljs-variable">@exadel</span>/esl/modules/esl-component/core'</span>;</code></pre>
        </li>
        <li>
          include optional sub-features directly. See component&#39;s documentation for details.
          <pre><code class="lang-javascript"><span class="hljs-attribute">import</span> <span class="hljs-string">'<span
            class="hljs-variable">@exadel</span>/esl/modules/esl-media/providers/iframe-provider'</span>;</code></pre>
        </li>
        <li>
          <p>Some modules contain cumulative <code>all</code> entries.</p>
        </li>
        <li>
          Styles are distributed in two versions:
          <ul class="container">
            <li>&#39;ready to use&#39; <code>core.css</code> or <code>core.less</code></li>
            <li>mixin version <code>core.mixin.less</code> for custom tagname definition</li>
          </ul>
        </li>
      </ul>
    </li>

    <li>
      <p>[Optional] Setup environment configuration, e.g. custom screen breakpoints.</p>
      <pre><code class="lang-javascript"> <span class="hljs-keyword">import</span> {ESLMediaBreakpoints} from <span
        class="hljs-string">'@exadel/esl/modules/esl-media-query/core'</span>;
 // define XS screen breakpoint <span class="hljs-keyword">for</span> up <span class="hljs-keyword">to</span> <span
          class="hljs-number">800</span>px screen width
 ESLMediaBreakpoints.addCustomBreakpoint(<span class="hljs-string">'XS'</span>, <span
          class="hljs-number">1</span>, <span class="hljs-number">800</span>);</code></pre>
    </li>

    <li>
      <p>Register components via <code>register</code> static method call</p>
      <pre><code class="lang-javascript">ESLImage.register()<span class="hljs-comment">;</span></code></pre>
      <p><em>You can pass custom tag name to &#39;register&#39; function, but use this option only in an exceptional
        situation.</em></p>
    </li>
  </ol>
</div>
<hr/>

<h2 id="browser-support-polyfills">Browser support &amp; Polyfills</h2>
<div class="container">
  <p>Exadel Smart Library does not have dependencies but uses the following list of native browser features:</p>
  <div class="row">
    <div class="col">
      Ecma Script 6 features
      <ul class="container">
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from">Array.from</a>
          (no Iterable Objects support required)
        </li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find">Array.prototype.find</a>
        </li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex">Array.prototype.findIndex</a>
        </li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes">Array.prototype.include</a>
        </li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is">Object.is</a>
        </li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise">ES6
          Promises</a></li>
      </ul>
    </div>
    <div class="col">
      Web API
      <ul>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent">Custom Events</a></li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Node/isConnected">Node.isConnected</a></li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/matches">Element.matches</a></li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/closest">Element.closest</a></li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/toggleAttribute">Element.toggleAttribute</a>
        </li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key">KeyboardEvent.key</a></li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver">IntersectionObserver</a></li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver">ResizeObserver</a></li>
        <li><a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements">Custom
          Elements</a></li>
      </ul>
    </div>
  </div>
  <p>All of them are fully supported by modern browsers, such as Chrome, Firefox, Safari or Edge (&gt;43).</p>
  <p>In order to make ESL work in older browsers you can use a &quot;light&quot; polyfills list of IntersectionObserver,
    ResizeObserver and Custom Elements
    (Older versions of Edge and Safari)</p>
  <p>Or make the library work in IE11 or Edge (&lt;14) by using the &quot;full&quot; polyfills list provided.</p>
  <p>See more details on what polyfill approach might look like in the test-server examples.</p>
  <p>Also, ESL has built-in polyfills for some of DOM and ES6 features. They are available under <a
    href="https://github.com/exadel-inc/esl/tree/main/src/polyfills">./polyfills</a> directory.</p>
</div>
<hr/>

<h2 id="roadmap">Roadmap</h2>
<div class="container">
  <ul class="m-8 mr-2 ml-2">
    <li><a href="https://{{ ui_playground }}" target="_blank">UI Playground</a> (<em>will be available soon</em>) demo
      server
    </li>
    <li>More helpers and sugar of ESLBaseElement (event listener helpers and decorators)</li>
    <li>Extension of esl-utils</li>
    <li>Dynamic Footnotes component</li>
    <li>Extension of esl-form elements (custom form base, helpers, validation and more)</li>
    <li>ESLCarousel component</li>
    <li>ESLToast component</li>
    <li>More components in the library</li>
  </ul>
</div>
