{
	"id": 0,
	"name": "@exadel/esl",
	"kind": 0,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 12,
			"name": "ArrayUtils",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 27,
					"name": "flat",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/array.ts",
							"line": 13,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 28,
							"name": "flat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Flat array"
							},
							"typeParameter": [
								{
									"id": 29,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 30,
									"name": "arr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": null
												},
												{
													"type": "reference",
													"name": "T"
												},
												{
													"type": "array",
													"elementType": {
														"type": "reference",
														"name": "T"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "T"
								}
							}
						}
					]
				},
				{
					"id": 13,
					"name": "range",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/array.ts",
							"line": 33,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 14,
							"name": "range",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Crete an array filled with the range [0,..,N-1]"
							},
							"parameters": [
								{
									"id": 15,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 16,
							"name": "range",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Crete an array filled with values returned by the filler callback"
							},
							"typeParameter": [
								{
									"id": 17,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 18,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 19,
									"name": "filler",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 20,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "misc/array.ts",
													"line": 35,
													"character": 44
												}
											],
											"signatures": [
												{
													"id": 21,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 22,
															"name": "i",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "T"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "T"
								}
							}
						}
					]
				},
				{
					"id": 23,
					"name": "tuple",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/array.ts",
							"line": 6,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 24,
							"name": "tuple",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Split array into tuples"
							},
							"typeParameter": [
								{
									"id": 25,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 26,
									"name": "arr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"name": "T"
										}
									],
									"name": "Tuple"
								}
							}
						}
					]
				},
				{
					"id": 35,
					"name": "uniq",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/array.ts",
							"line": 24,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 36,
							"name": "uniq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Make array values unique"
							},
							"typeParameter": [
								{
									"id": 37,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 38,
									"name": "arr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "T"
								}
							}
						}
					]
				},
				{
					"id": 31,
					"name": "wrap",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/array.ts",
							"line": 17,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 32,
							"name": "wrap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Wrap to array"
							},
							"typeParameter": [
								{
									"id": 33,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 34,
									"name": "arr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "T"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "T"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "T"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						27,
						13,
						23,
						35,
						31
					]
				}
			],
			"sources": [
				{
					"fileName": "misc/array.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 120,
			"name": "FormatUtils",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 146,
					"name": "DEF_FORMAT_MATCHER",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Default RegExp to match replacements in the string for the {@link format} function"
					},
					"sources": [
						{
							"fileName": "misc/format.ts",
							"line": 55,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "..."
				},
				{
					"id": 124,
					"name": "evaluate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/format.ts",
							"line": 43,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 125,
							"name": "evaluate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Evaluate passed string or returns `defaultValue`"
							},
							"parameters": [
								{
									"id": 126,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 127,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 128,
					"name": "format",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/format.ts",
							"line": 58,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 129,
							"name": "format",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replace `{key}` patterns in the string from the source object"
							},
							"parameters": [
								{
									"id": 130,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 131,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								},
								{
									"id": 132,
									"name": "matcher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RegExp"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 121,
					"name": "parseAspectRatio",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/format.ts",
							"line": 36,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 122,
							"name": "parseAspectRatio",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Common function that returns coefficient aspect ratio\nSupported formats: w:h, w/h, coefficient",
								"returns": "aspect ratio coefficient\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n`16:9`, `16/9`, `1.77`"
									}
								]
							},
							"parameters": [
								{
									"id": 123,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "string to parse"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 142,
					"name": "parseNumber",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/format.ts",
							"line": 22,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 143,
							"name": "parseNumber",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Parse number with the ability to pass an alternative fallback for NaN.\nNote: falsy values except 0 are treated as NaN"
							},
							"parameters": [
								{
									"id": 144,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 145,
									"name": "nanValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 136,
					"name": "toCamelCase",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/format.ts",
							"line": 9,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 137,
							"name": "toCamelCase",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Convert string to camelCase notation"
							},
							"parameters": [
								{
									"id": 138,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 133,
					"name": "toKebabCase",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/format.ts",
							"line": 4,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 134,
							"name": "toKebabCase",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Convert string to kebab-case notation"
							},
							"parameters": [
								{
									"id": 135,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 139,
					"name": "unwrapParenthesis",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/format.ts",
							"line": 14,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 140,
							"name": "unwrapParenthesis",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Unwrap string from parenthesis"
							},
							"parameters": [
								{
									"id": 141,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						146
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						124,
						128,
						121,
						142,
						136,
						133,
						139
					]
				}
			],
			"sources": [
				{
					"fileName": "misc/format.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 147,
			"name": "FunctionUtils",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 162,
					"name": "AnyToAnyFnSignature",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/functions.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 163,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "misc/functions.ts",
									"line": 11,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 164,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 165,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				},
				{
					"id": 158,
					"name": "AnyToVoidFnSignature",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/functions.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 159,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "misc/functions.ts",
									"line": 9,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 160,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 161,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 166,
					"name": "MethodTypedDecorator",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/functions.ts",
							"line": 13,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 172,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 167,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "misc/functions.ts",
									"line": 13,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 168,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 169,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 170,
											"name": "property",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 171,
											"name": "descriptor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "TypedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "TypedPropertyDescriptor"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 155,
					"name": "NoopFnSignature",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/functions.ts",
							"line": 7,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 156,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "misc/functions.ts",
									"line": 7,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 157,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 151,
					"name": "identity",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/functions.ts",
							"line": 5,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 152,
							"name": "identity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Function that returns the first argument"
							},
							"typeParameter": [
								{
									"id": 153,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 154,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "T"
							}
						}
					]
				},
				{
					"id": 148,
					"name": "noop",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/functions.ts",
							"line": 2,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 149,
							"name": "noop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Function that does nothing"
							},
							"parameters": [
								{
									"id": 150,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						162,
						158,
						166,
						155
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						151,
						148
					]
				}
			],
			"sources": [
				{
					"fileName": "misc/functions.ts",
					"line": 2,
					"character": 0
				}
			]
		},
		{
			"id": 173,
			"name": "IEFixes",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 174,
					"name": "createZIndexIframe",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "fixes/ie-fixes.ts",
							"line": 2,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 175,
							"name": "createZIndexIframe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fix IE browser to allow to display alert under iframe"
							},
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						174
					]
				}
			],
			"sources": [
				{
					"fileName": "fixes/ie-fixes.ts",
					"line": 2,
					"character": 0
				}
			]
		},
		{
			"id": 39,
			"name": "ObjectUtils",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 105,
					"name": "CopyPredicate",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/object.ts",
							"line": 8,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 106,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "misc/object.ts",
									"line": 8,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 107,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 108,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 109,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 52,
					"name": "copy",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/object.ts",
							"line": 42,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 53,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Makes a plain copy of obj with properties satisfying the predicate\nIf no predicate provided copies all own properties"
							},
							"typeParameter": [
								{
									"id": 54,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 55,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "T"
									}
								},
								{
									"id": 56,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 105,
										"name": "CopyPredicate"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "Partial"
							}
						}
					]
				},
				{
					"id": 57,
					"name": "copyDefinedKeys",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/object.ts",
							"line": 51,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 58,
							"name": "copyDefinedKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Makes a flat copy without undefined keys"
							},
							"typeParameter": [
								{
									"id": 59,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 60,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "Partial"
							}
						}
					]
				},
				{
					"id": 40,
					"name": "deepCompare",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/object.ts",
							"line": 11,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 41,
							"name": "deepCompare",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deep object compare"
							},
							"parameters": [
								{
									"id": 42,
									"name": "obj1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 43,
									"name": "obj2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 66,
					"name": "deepMerge",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/object.ts",
							"line": 97,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 67,
							"name": "deepMerge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs a deep copy of object.",
								"returns": "deep copy of the object\n"
							},
							"typeParameter": [
								{
									"id": 68,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 69,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "T"
							}
						},
						{
							"id": 70,
							"name": "deepMerge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs a deep merge of two objects. Does not modify objects (immutable)",
								"returns": "new object with merged key/values\n"
							},
							"typeParameter": [
								{
									"id": 71,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 72,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 73,
									"name": "obj1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "T"
									}
								},
								{
									"id": 74,
									"name": "obj2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "U"
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "T"
									},
									{
										"type": "reference",
										"name": "U"
									}
								]
							}
						},
						{
							"id": 75,
							"name": "deepMerge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs a deep merge of three objects. Does not modify objects (immutable)",
								"returns": "new object with merged key/values\n"
							},
							"typeParameter": [
								{
									"id": 76,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 77,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 78,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 79,
									"name": "obj1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "T"
									}
								},
								{
									"id": 80,
									"name": "obj2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "U"
									}
								},
								{
									"id": 81,
									"name": "obj3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "T"
									},
									{
										"type": "reference",
										"name": "U"
									},
									{
										"type": "reference",
										"name": "V"
									}
								]
							}
						},
						{
							"id": 82,
							"name": "deepMerge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs a deep merge of four objects. Does not modify objects (immutable)",
								"returns": "new object with merged key/values\n"
							},
							"typeParameter": [
								{
									"id": 83,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 84,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 85,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 86,
									"name": "W",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 87,
									"name": "obj1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "T"
									}
								},
								{
									"id": 88,
									"name": "obj2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "U"
									}
								},
								{
									"id": 89,
									"name": "obj3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "V"
									}
								},
								{
									"id": 90,
									"name": "obj4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "W"
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "T"
									},
									{
										"type": "reference",
										"name": "U"
									},
									{
										"type": "reference",
										"name": "V"
									},
									{
										"type": "reference",
										"name": "W"
									}
								]
							}
						},
						{
							"id": 91,
							"name": "deepMerge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs a deep merge of objects and returns new object. Does not modify objects (immutable)",
								"returns": "new object with merged key/values\n"
							},
							"parameters": [
								{
									"id": 92,
									"name": "objects",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 48,
					"name": "defined",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/object.ts",
							"line": 34,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 49,
							"name": "defined",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "first defined param"
							},
							"typeParameter": [
								{
									"id": 50,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 51,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "T"
									}
								]
							}
						}
					]
				},
				{
					"id": 115,
					"name": "get",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/object.ts",
							"line": 84,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 116,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets object property using \"path\" key\nCreates empty object if sub-key value is not presented."
							},
							"parameters": [
								{
									"id": 117,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "object"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 118,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "key path, use '.' as delimiter"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 119,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "default\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 44,
					"name": "getPropertyDescriptor",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/object.ts",
							"line": 24,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 45,
							"name": "getPropertyDescriptor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Find the closest property descriptor"
							},
							"parameters": [
								{
									"id": 46,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 47,
									"name": "prop",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "PropertyKey"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "PropertyDescriptor"
									}
								]
							}
						}
					]
				},
				{
					"id": 93,
					"name": "isObject",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/object.ts",
							"line": 1,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 94,
							"name": "isObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 95,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "obj",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Record"
								}
							}
						}
					]
				},
				{
					"id": 96,
					"name": "isObjectLike",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/object.ts",
							"line": 2,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 97,
							"name": "isObjectLike",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 98,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 99,
					"name": "isPrimitive",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/object.ts",
							"line": 3,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 100,
							"name": "isPrimitive",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 101,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "obj",
								"asserts": false,
								"targetType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "boolean"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 102,
					"name": "isPrototype",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/object.ts",
							"line": 6,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 103,
							"name": "isPrototype",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 104,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 61,
					"name": "omit",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "misc/object.ts",
							"line": 56,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 62,
							"name": "omit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Omit copying provided properties from object"
							},
							"typeParameter": [
								{
									"id": 63,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 64,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "T"
									}
								},
								{
									"id": 65,
									"name": "keys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "Partial"
							}
						}
					]
				},
				{
					"id": 110,
					"name": "set",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/object.ts",
							"line": 67,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 111,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set object property using \"path\" key"
							},
							"parameters": [
								{
									"id": 112,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "object"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 113,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "key path, use '.' as delimiter"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 114,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "value of property\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						105
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						52,
						57,
						40,
						66,
						48,
						115,
						44,
						93,
						96,
						99,
						102,
						61,
						110
					]
				}
			],
			"sources": [
				{
					"fileName": "misc/object.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "UID",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 9,
					"name": "generateUId",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/uid.ts",
							"line": 29,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 10,
							"name": "generateUId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate unique id",
								"tags": [
									{
										"tag": "deprecated",
										"text": "Alias for {@link randUID}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 11,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 6,
					"name": "randUID",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/uid.ts",
							"line": 19,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 7,
							"name": "randUID",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return random unique identifier"
							},
							"parameters": [
								{
									"id": 8,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2,
					"name": "sequentialUID",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "misc/uid.ts",
							"line": 12,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "sequentialUID",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create and return sequential id"
							},
							"parameters": [
								{
									"id": 4,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						9,
						6,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "misc/uid.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 227,
			"name": "memoize",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 228,
					"name": "clear",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 229,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Clear memoization cache for passed target and property.\nAccepts not own properties.\nNote: be sure that you targeting memoized property or function.\nClear utility has no 100% check to prevent modifying incorrect (not memoized) property keys"
							},
							"parameters": [
								{
									"id": 230,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 231,
									"name": "property",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 232,
					"name": "has",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 233,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if property has cache for the passed params"
							},
							"parameters": [
								{
									"id": 234,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 235,
									"name": "property",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 236,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						228,
						232
					]
				}
			]
		},
		{
			"id": 437,
			"name": "CSSClassUtils",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"shortText": "CSS class manipulation utilities.",
				"text": "Allows to manipulate with CSS classes with the following set of sub-features:\n- JQuery-like enumeration - you can pass multiple tokens separated by space\n- safe checks - empty or falsy token sting will be ignored without throwing an error\n- inversion syntax - tokens that start from '!' will be processed with inverted action\n(e.g. addCls(el, '!class') - will remove 'class' from the element, while removeCls(el, '!class') adds 'class' to the element)\n- class locks - you can manipulate with classes using `locker` option that takes into account the modification initiator.\nThat means the class added in 'locker' mode will not be removed until all initiators that requested add class have requested its removal.\n"
			},
			"children": [
				{
					"id": 461,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 462,
							"name": "new CSSClassUtils",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 437,
								"name": "CSSClassUtils"
							}
						}
					]
				},
				{
					"id": 441,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/class.ts",
							"line": 71,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 442,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add all classes from the class token string to the element.",
								"tags": [
									{
										"tag": "see",
										"text": "CSSClassUtils\n"
									}
								]
							},
							"parameters": [
								{
									"id": 443,
									"name": "els",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HTMLElement"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "HTMLElement"
												}
											}
										]
									}
								},
								{
									"id": 444,
									"name": "cls",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 445,
									"name": "locker",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 446,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/class.ts",
							"line": 80,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 447,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove all classes from the class token string to the element.",
								"tags": [
									{
										"tag": "see",
										"text": "CSSClassUtils\n"
									}
								]
							},
							"parameters": [
								{
									"id": 448,
									"name": "els",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HTMLElement"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "HTMLElement"
												}
											}
										]
									}
								},
								{
									"id": 449,
									"name": "cls",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 450,
									"name": "locker",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 438,
					"name": "splitTokens",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/class.ts",
							"line": 63,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 439,
							"name": "splitTokens",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Splitting passed token string into CSS class names array."
							},
							"parameters": [
								{
									"id": 440,
									"name": "tokenString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 451,
					"name": "toggle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/class.ts",
							"line": 89,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 452,
							"name": "toggle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Toggle all classes from the class token string on the element to the passed state.",
								"tags": [
									{
										"tag": "see",
										"text": "CSSClassUtils\n"
									}
								]
							},
							"parameters": [
								{
									"id": 453,
									"name": "els",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HTMLElement"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "HTMLElement"
												}
											}
										]
									}
								},
								{
									"id": 454,
									"name": "cls",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 455,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 456,
									"name": "locker",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 457,
					"name": "unlock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/class.ts",
							"line": 94,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 458,
							"name": "unlock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove all lockers for the element or passed element className"
							},
							"parameters": [
								{
									"id": 459,
									"name": "els",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HTMLElement"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "HTMLElement"
												}
											}
										]
									}
								},
								{
									"id": 460,
									"name": "className",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						461
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						441,
						446,
						438,
						451,
						457
					]
				}
			],
			"sources": [
				{
					"fileName": "dom/class.ts",
					"line": 61,
					"character": 22
				}
			]
		},
		{
			"id": 413,
			"name": "DelayedTask",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Task placeholder with a single place for executing deferred task.\nOnly one task can be planed per DelayedTask instance.",
				"tags": [
					{
						"tag": "see",
						"text": "put DelayedTask.put behaviour description.\n"
					}
				]
			},
			"children": [
				{
					"id": 414,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 415,
							"name": "new DelayedTask",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 413,
								"name": "DelayedTask"
							}
						}
					]
				},
				{
					"id": 416,
					"name": "_fn",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "async/delayed-task.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"id": 158,
								"name": "AnyToVoidFnSignature"
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 417,
					"name": "_timeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "async/delayed-task.ts",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 420,
					"name": "fn",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"returns": "Function of currently deferred (planned) task"
					},
					"sources": [
						{
							"fileName": "async/delayed-task.ts",
							"line": 19,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 421,
							"name": "fn",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"returns": "Function of currently deferred (planned) task"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 158,
										"name": "AnyToVoidFnSignature"
									}
								]
							}
						}
					]
				},
				{
					"id": 426,
					"name": "cancel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "async/delayed-task.ts",
							"line": 46,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 427,
							"name": "cancel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Cancel deferred (planned) task"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 158,
										"name": "AnyToVoidFnSignature"
									}
								]
							}
						}
					]
				},
				{
					"id": 422,
					"name": "put",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "async/delayed-task.ts",
							"line": 31,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 423,
							"name": "put",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Cancel deferred task and planning passed"
							},
							"parameters": [
								{
									"id": 424,
									"name": "task",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "task function"
									},
									"type": {
										"type": "reference",
										"id": 158,
										"name": "AnyToVoidFnSignature"
									}
								},
								{
									"id": 425,
									"name": "delay",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "time to delay task execution\n - pass negative or false to execute task immediately\n - pass 0 to plan task to the macrotask\n - pass positive number x to delay task on x ms.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 158,
										"name": "AnyToVoidFnSignature"
									}
								]
							}
						}
					]
				},
				{
					"id": 418,
					"name": "run",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "async/delayed-task.ts",
							"line": 13,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 419,
							"name": "run",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Execute deferred task immediately"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						414
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						416,
						417
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						420
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						426,
						422,
						418
					]
				}
			],
			"sources": [
				{
					"fileName": "async/delayed-task.ts",
					"line": 8,
					"character": 13
				}
			]
		},
		{
			"id": 671,
			"name": "DeviceDetector",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"shortText": "Device detection utility",
				"tags": [
					{
						"tag": "readonly",
						"text": "\n"
					}
				]
			},
			"decorators": [
				{
					"name": "ExportNs",
					"type": {
						"type": "reference",
						"name": "ExportNs"
					},
					"arguments": {
						"name": "'DeviceDetector'"
					}
				}
			],
			"children": [
				{
					"id": 701,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 702,
							"name": "new DeviceDetector",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 671,
								"name": "DeviceDetector"
							}
						}
					]
				},
				{
					"id": 685,
					"name": "isAndroid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 41,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 683,
					"name": "isBlink",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 35,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 675,
					"name": "isBlinkEdge",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 17,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 684,
					"name": "isBot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 38,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 680,
					"name": "isChrome",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 26,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 676,
					"name": "isEdge",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 18,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 674,
					"name": "isEdgeHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 16,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 678,
					"name": "isFirefox",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 22,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 677,
					"name": "isGecko",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 21,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 673,
					"name": "isIE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 13,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 688,
					"name": "isLegacyMobile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 44,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 689,
					"name": "isMobile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 46,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 687,
					"name": "isMobileIOS",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 43,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 686,
					"name": "isMobileIOS13",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 42,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 690,
					"name": "isMobileSafari",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 47,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 679,
					"name": "isOpera",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 25,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 682,
					"name": "isSafari",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 32,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 672,
					"name": "isTrident",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 12,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 681,
					"name": "isWebkit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 29,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "..."
				},
				{
					"id": 695,
					"name": "TOUCH_EVENTS",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 62,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 696,
							"name": "TOUCH_EVENTS",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 697,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 700,
											"name": "END",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 699,
											"name": "MOVE",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 698,
											"name": "START",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												700,
												699,
												698
											]
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 693,
					"name": "hasHover",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 58,
							"character": 20
						}
					],
					"getSignature": [
						{
							"id": 694,
							"name": "hasHover",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 691,
					"name": "isTouchDevice",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "environment/device-detector.ts",
							"line": 50,
							"character": 20
						}
					],
					"getSignature": [
						{
							"id": 692,
							"name": "isTouchDevice",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						701
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						685,
						683,
						675,
						684,
						680,
						676,
						674,
						678,
						677,
						673,
						688,
						689,
						687,
						686,
						690,
						679,
						682,
						672,
						681
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						695,
						693,
						691
					]
				}
			],
			"sources": [
				{
					"fileName": "environment/device-detector.ts",
					"line": 10,
					"character": 22
				}
			]
		},
		{
			"id": 466,
			"name": "EventUtils",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 488,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 489,
							"name": "new EventUtils",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 466,
								"name": "EventUtils"
							}
						}
					]
				},
				{
					"id": 467,
					"name": "dispatch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/events.ts",
							"line": 14,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 468,
							"name": "dispatch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Dispatch custom event.\nEvent bubbles and is cancelable by default, use `eventInit` to override that."
							},
							"parameters": [
								{
									"id": 469,
									"name": "el",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "element target"
									},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								},
								{
									"id": 470,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "event name"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 471,
									"name": "eventInit",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "custom event init. See {@link CustomEventInit}\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "CustomEventInit"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 478,
					"name": "normalizeCoordinates",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/events.ts",
							"line": 39,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 479,
							"name": "normalizeCoordinates",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Normalize MouseEvent"
							},
							"parameters": [
								{
									"id": 480,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "MouseEvent"
									}
								},
								{
									"id": 481,
									"name": "elem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 463,
								"name": "Point"
							}
						}
					]
				},
				{
					"id": 475,
					"name": "normalizeTouchPoint",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/events.ts",
							"line": 30,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 476,
							"name": "normalizeTouchPoint",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Normalize TouchEvent or PointerEvent"
							},
							"parameters": [
								{
									"id": 477,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TouchEvent"
											},
											{
												"type": "reference",
												"name": "PointerEvent"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 463,
								"name": "Point"
							}
						}
					]
				},
				{
					"id": 485,
					"name": "preventDefault",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/events.ts",
							"line": 55,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 486,
							"name": "preventDefault",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stub method to prevent default event behaviour"
							},
							"parameters": [
								{
									"id": 487,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Event"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 472,
					"name": "source",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/events.ts",
							"line": 24,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 473,
							"name": "source",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get original CustomEvent source"
							},
							"parameters": [
								{
									"id": 474,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "CustomEvent"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"name": "EventTarget"
									}
								]
							}
						}
					]
				},
				{
					"id": 482,
					"name": "stopPropagation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/events.ts",
							"line": 50,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 483,
							"name": "stopPropagation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stub method to prevent event from bubbling out of target"
							},
							"parameters": [
								{
									"id": 484,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Event"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						488
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						467,
						478,
						475,
						485,
						472,
						482
					]
				}
			],
			"sources": [
				{
					"fileName": "dom/events.ts",
					"line": 6,
					"character": 22
				}
			]
		},
		{
			"id": 198,
			"name": "Observable",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"shortText": "Abstract Observable implementation",
				"tags": [
					{
						"tag": "author",
						"text": "Yuliya Adamskaya\n"
					}
				]
			},
			"children": [
				{
					"id": 199,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 200,
							"name": "new Observable",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 201,
									"name": "Callback",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 158,
										"name": "AnyToVoidFnSignature"
									},
									"default": {
										"type": "reference",
										"id": 158,
										"name": "AnyToVoidFnSignature"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 198,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Callback"
									}
								],
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 202,
					"name": "_listeners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "abstract/observable.ts",
							"line": 8,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Callback"
							}
						],
						"name": "Set"
					},
					"defaultValue": "..."
				},
				{
					"id": 203,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "abstract/observable.ts",
							"line": 10,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 204,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 205,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Callback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 209,
					"name": "fire",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "abstract/observable.ts",
							"line": 17,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 210,
							"name": "fire",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 211,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Callback"
											}
										],
										"name": "Parameters"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 206,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "abstract/observable.ts",
							"line": 13,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 207,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 208,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Callback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						199
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						202
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						203,
						209,
						206
					]
				}
			],
			"sources": [
				{
					"fileName": "abstract/observable.ts",
					"line": 7,
					"character": 22
				}
			],
			"typeParameter": [
				{
					"id": 212,
					"name": "Callback",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 158,
						"name": "AnyToVoidFnSignature"
					},
					"default": {
						"type": "reference",
						"id": 158,
						"name": "AnyToVoidFnSignature"
					}
				}
			]
		},
		{
			"id": 337,
			"name": "PromiseUtils",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"shortText": "Promise utils helper class\nNote: use individual methods in case you need correct \"tree shaking\""
			},
			"children": [
				{
					"id": 380,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 381,
							"name": "new PromiseUtils",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 337,
								"name": "PromiseUtils"
							}
						}
					]
				},
				{
					"id": 366,
					"name": "deferred",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "async/promise.ts",
							"line": 141,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 367,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 368,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create Deferred Object that wraps promise and its resolve and reject callbacks"
									},
									"typeParameter": [
										{
											"id": 369,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"type": {
										"type": "reference",
										"id": 322,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "Deferred"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 344,
					"name": "fromEvent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "async/promise.ts",
							"line": 136,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 345,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 346,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "Promise that will be resolved by dispatching `event` on `target`\nOr it will be rejected in `timeout` if it's specified\nOptional `options` for addEventListener can be also specified\n"
									},
									"parameters": [
										{
											"id": 347,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 304,
												"name": "ListenableTarget"
											}
										},
										{
											"id": 348,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 349,
											"name": "timeout",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										},
										{
											"id": 350,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"name": "AddEventListenerOptions"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Event"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 351,
					"name": "fromMarker",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "async/promise.ts",
							"line": 137,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 352,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 353,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Short helper to make Promise from element state marker",
										"returns": "Promise that will be resolved if the target `marker` property is truthful or `event` is dispatched",
										"tags": [
											{
												"tag": "example",
												"text": "\n`const imgReady = promisifyMarker(eslImage, 'ready');`\n"
											}
										]
									},
									"parameters": [
										{
											"id": 354,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										},
										{
											"id": 355,
											"name": "marker",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 356,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLElement"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 338,
					"name": "fromTimeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "async/promise.ts",
							"line": 135,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 339,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 340,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "Promise that will be resolved in `timeout` with optional `payload`\n"
									},
									"typeParameter": [
										{
											"id": 341,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 342,
											"name": "timeout",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 343,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 375,
					"name": "reject",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "async/promise.ts",
							"line": 143,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 376,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 377,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Safe wrap for Promise.reject to use in Promise chain",
										"tags": [
											{
												"tag": "example",
												"text": "\n`const rejectedPromise = resolvedPromise.then(rejectPromise);`\n"
											}
										]
									},
									"typeParameter": [
										{
											"id": 378,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "never"
											}
										}
									],
									"parameters": [
										{
											"id": 379,
											"name": "arg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "T"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "T"
															}
														],
														"name": "PromiseLike"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 370,
					"name": "resolve",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "async/promise.ts",
							"line": 142,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 371,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 372,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Safe wrap for Promise.resolve to use in Promise chain",
										"tags": [
											{
												"tag": "example",
												"text": "\n`const resolvedPromise = rejectedPromise.catch(resolvePromise);`\n"
											}
										]
									},
									"typeParameter": [
										{
											"id": 373,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 374,
											"name": "arg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "T"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "T"
															}
														],
														"name": "PromiseLike"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 357,
					"name": "tryUntil",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "async/promise.ts",
							"line": 139,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 358,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 359,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Call `callback` limited by `tryCount` amount of times with interval in `timeout` ms",
										"returns": "Promise that will be resolved as soon as callback returns truthy value, or reject it by limit.\n"
									},
									"typeParameter": [
										{
											"id": 360,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 361,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 362,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "async/promise.ts",
															"line": 65,
															"character": 38
														}
													],
													"signatures": [
														{
															"id": 363,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "T"
															}
														}
													]
												}
											}
										},
										{
											"id": 364,
											"name": "tryCount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "2"
										},
										{
											"id": 365,
											"name": "timeout",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "100"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						380
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						366,
						344,
						351,
						338,
						375,
						370,
						357
					]
				}
			],
			"sources": [
				{
					"fileName": "async/promise.ts",
					"line": 134,
					"character": 22
				}
			]
		},
		{
			"id": 519,
			"name": "RTLUtils",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 530,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 531,
							"name": "new RTLUtils",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 519,
								"name": "RTLUtils"
							}
						}
					]
				},
				{
					"id": 523,
					"name": "scrollType",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true
					},
					"comment": {
						"returns": "RTL scroll type (lazy, memoized)\n"
					},
					"decorators": [
						{
							"name": "memoize",
							"type": {
								"type": "reference",
								"id": 219,
								"name": "memoize"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "dom/rtl.ts",
							"line": 16,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 524,
							"name": "scrollType",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"returns": "RTL scroll type (lazy, memoized)\n"
							},
							"type": {
								"type": "reference",
								"id": 518,
								"name": "ScrollType"
							}
						}
					]
				},
				{
					"id": 520,
					"name": "isRtl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/rtl.ts",
							"line": 8,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 521,
							"name": "isRtl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if the element in a RTL direction context"
							},
							"parameters": [
								{
									"id": 522,
									"name": "el",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 525,
					"name": "normalizeScrollLeft",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/rtl.ts",
							"line": 28,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 526,
							"name": "normalizeScrollLeft",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 527,
									"name": "el",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								},
								{
									"id": 528,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"defaultValue": "null"
								},
								{
									"id": 529,
									"name": "isRtl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						530
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						523
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						520,
						525
					]
				}
			],
			"sources": [
				{
					"fileName": "dom/rtl.ts",
					"line": 6,
					"character": 22
				}
			]
		},
		{
			"id": 551,
			"name": "ScrollUtils",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 568,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 569,
							"name": "new ScrollUtils",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 551,
								"name": "ScrollUtils"
							}
						}
					]
				},
				{
					"id": 552,
					"name": "hasVerticalScroll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/scroll.ts",
							"line": 11,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 553,
							"name": "hasVerticalScroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check vertical scroll based on content height"
							},
							"parameters": [
								{
									"id": 554,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 555,
					"name": "lock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/scroll.ts",
							"line": 19,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 556,
							"name": "lock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Disable scroll on the page."
							},
							"parameters": [
								{
									"id": 557,
									"name": "strategy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "to make scroll visually disabled\n"
									},
									"type": {
										"type": "reference",
										"id": 550,
										"name": "ScrollStrategy"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 560,
					"name": "requestLock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/scroll.ts",
							"line": 41,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 561,
							"name": "requestLock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Disable scroll on the page."
							},
							"parameters": [
								{
									"id": 562,
									"name": "initiator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "object to associate request with"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 563,
									"name": "strategy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "to make scroll visually disabled\n\nTODO: currently requests with different strategy is not taken into account\n"
									},
									"type": {
										"type": "reference",
										"id": 550,
										"name": "ScrollStrategy"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 564,
					"name": "requestUnlock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/scroll.ts",
							"line": 51,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 565,
							"name": "requestUnlock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Enable scroll on the page in case it was requested with given initiator."
							},
							"parameters": [
								{
									"id": 566,
									"name": "initiator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "object to associate request with"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 567,
									"name": "strategy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "to make scroll visually disabled\n"
									},
									"type": {
										"type": "reference",
										"id": 550,
										"name": "ScrollStrategy"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 558,
					"name": "unlock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/scroll.ts",
							"line": 30,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 559,
							"name": "unlock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Enable scroll on the page."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						568
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						552,
						555,
						560,
						564,
						558
					]
				}
			],
			"sources": [
				{
					"fileName": "dom/scroll.ts",
					"line": 9,
					"character": 22
				}
			]
		},
		{
			"id": 612,
			"name": "TraversingUtils",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"tags": [
					{
						"tag": "deprecated",
						"text": "Cumulative traversing utility set"
					}
				]
			},
			"children": [
				{
					"id": 663,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 664,
							"name": "new TraversingUtils",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 612,
								"name": "TraversingUtils"
							}
						}
					]
				},
				{
					"id": 618,
					"name": "closestBy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/traversing.ts",
							"line": 48,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 619,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 620,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Find closest parent node of `node` by `predicate`.\nOptional `skipSelf` to skip initial node"
									},
									"parameters": [
										{
											"id": 621,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"name": "Node"
													}
												]
											}
										},
										{
											"id": 622,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 623,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 624,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 625,
																	"name": "node",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										},
										{
											"id": 626,
											"name": "skipSelf",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "Node"
											}
										]
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 627,
					"name": "createSequenceFinder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/traversing.ts",
							"line": 49,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 628,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 629,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create function that finds next dom element, that matches selector, in the sequence declared by `next` function"
									},
									"parameters": [
										{
											"id": 630,
											"name": "next",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 631,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 632,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 633,
																	"name": "el",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Element"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"name": "Element"
																	}
																]
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 634,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 635,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 636,
															"name": "base",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Element"
															}
														},
														{
															"id": 637,
															"name": "sel",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"name": "Element"
															}
														]
													}
												}
											]
										}
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 653,
					"name": "findAll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/traversing.ts",
							"line": 55,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 654,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 655,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "Array of all matching elements in subtree or empty array"
									},
									"parameters": [
										{
											"id": 656,
											"name": "base",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										},
										{
											"id": 657,
											"name": "sel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Element"
										}
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 658,
					"name": "findChildren",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/traversing.ts",
							"line": 56,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 659,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 660,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "Array of all matching children or empty array"
									},
									"parameters": [
										{
											"id": 661,
											"name": "base",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										},
										{
											"id": 662,
											"name": "sel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Element"
										}
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 638,
					"name": "findNext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/traversing.ts",
							"line": 51,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 639,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 640,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 641,
											"name": "base",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										},
										{
											"id": 642,
											"name": "sel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "Element"
											}
										]
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 648,
					"name": "findParent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/traversing.ts",
							"line": 53,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 649,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 650,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 651,
											"name": "base",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										},
										{
											"id": 652,
											"name": "sel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "Element"
											}
										]
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 643,
					"name": "findPrev",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/traversing.ts",
							"line": 52,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 644,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 645,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 646,
											"name": "base",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										},
										{
											"id": 647,
											"name": "sel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "Element"
											}
										]
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 613,
					"name": "isRelative",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "dom/traversing.ts",
							"line": 47,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 614,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 615,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check that `nodeA` and `nodeB` are from the same tree path"
									},
									"parameters": [
										{
											"id": 616,
											"name": "nodeA",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"name": "Node"
													}
												]
											}
										},
										{
											"id": 617,
											"name": "nodeB",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"name": "Node"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							]
						}
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						663
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						618,
						627,
						653,
						658,
						638,
						648,
						643,
						613
					]
				}
			],
			"sources": [
				{
					"fileName": "dom/traversing.ts",
					"line": 46,
					"character": 22
				}
			]
		},
		{
			"id": 396,
			"name": "Debounced",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 397,
					"name": "promise",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Promise of deferred function call"
					},
					"sources": [
						{
							"fileName": "async/debounce.ts",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "F"
											}
										],
										"name": "ReturnType"
									}
								]
							}
						],
						"name": "Promise"
					}
				},
				{
					"id": 398,
					"name": "cancel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 399,
							"name": "cancel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Cancel debounced call"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						397
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						398
					]
				}
			],
			"sources": [
				{
					"fileName": "async/debounce.ts",
					"line": 7,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 400,
					"name": "F",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 162,
						"name": "AnyToAnyFnSignature"
					}
				}
			],
			"signatures": [
				{
					"id": 401,
					"name": "Debounced",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Debounced<F> is a function wrapper type for a function decorated via debounce"
					},
					"parameters": [
						{
							"id": 402,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "F"
									}
								],
								"name": "Parameters"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "F"
											}
										],
										"name": "ReturnType"
									}
								]
							}
						],
						"name": "Promise"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 332,
					"typeArguments": [
						{
							"type": "reference",
							"name": "F"
						}
					],
					"name": "PromisifyResultFn"
				}
			]
		},
		{
			"id": 463,
			"name": "Point",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 464,
					"name": "x",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "dom/events.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 465,
					"name": "y",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "dom/events.ts",
							"line": 3,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						464,
						465
					]
				}
			],
			"sources": [
				{
					"fileName": "dom/events.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 408,
			"name": "Throttled",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 409,
					"name": "promise",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Promise of throttled function call"
					},
					"sources": [
						{
							"fileName": "async/throttle.ts",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "F"
											}
										],
										"name": "ReturnType"
									}
								]
							}
						],
						"name": "Promise"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						409
					]
				}
			],
			"sources": [
				{
					"fileName": "async/throttle.ts",
					"line": 7,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 410,
					"name": "F",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 162,
						"name": "AnyToAnyFnSignature"
					}
				}
			],
			"signatures": [
				{
					"id": 411,
					"name": "Throttled",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Throttled<F> is a function wrapper type for a function decorated via throttle"
					},
					"parameters": [
						{
							"id": 412,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "F"
									}
								],
								"name": "Parameters"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "F"
											}
										],
										"name": "ReturnType"
									}
								]
							}
						],
						"name": "Promise"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 332,
					"typeArguments": [
						{
							"type": "reference",
							"name": "F"
						}
					],
					"name": "PromisifyResultFn"
				}
			]
		},
		{
			"id": 322,
			"name": "Deferred",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Deferred object represents promise with it's resolve/reject methods"
			},
			"sources": [
				{
					"fileName": "async/promise.ts",
					"line": 85,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 331,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 323,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 324,
							"name": "promise",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Wrapped promise"
							},
							"sources": [
								{
									"fileName": "async/promise.ts",
									"line": 87,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "Promise"
							}
						},
						{
							"id": 328,
							"name": "reject",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "async/promise.ts",
									"line": 91,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 329,
									"name": "reject",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function that rejects wrapped promise"
									},
									"parameters": [
										{
											"id": 330,
											"name": "arg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 325,
							"name": "resolve",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "async/promise.ts",
									"line": 89,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 326,
									"name": "resolve",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function that resolves wrapped promise"
									},
									"parameters": [
										{
											"id": 327,
											"name": "arg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								324
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								328,
								325
							]
						}
					],
					"sources": [
						{
							"fileName": "async/promise.ts",
							"line": 85,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 304,
			"name": "ListenableTarget",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Interface to describe abstract listenable target"
			},
			"sources": [
				{
					"fileName": "async/promise.ts",
					"line": 13,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 305,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 306,
							"name": "addEventListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "async/promise.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 307,
									"name": "addEventListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 308,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 309,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 310,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 311,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 312,
																	"name": "payload",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 313,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"name": "AddEventListenerOptions"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 314,
							"name": "removeEventListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "async/promise.ts",
									"line": 19,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 315,
									"name": "removeEventListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 316,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 317,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 318,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 319,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 320,
																	"name": "payload",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 321,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"name": "AddEventListenerOptions"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								306,
								314
							]
						}
					],
					"sources": [
						{
							"fileName": "async/promise.ts",
							"line": 13,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 193,
			"name": "MemoHashFn",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "misc/memoize.ts",
					"line": 45,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 197,
					"name": "F",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 162,
						"name": "AnyToAnyFnSignature"
					},
					"default": {
						"type": "reference",
						"id": 162,
						"name": "AnyToAnyFnSignature"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 194,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"comment": {
						"shortText": "Describe abstract memoization hash function. Memoization should have the same or compatible signature as the decorated function.\nHash function can return string or null as a hash result. Note: null is correct hash for arguments!\nIf the result is `undefined` - it means that the hash can not be generated."
					},
					"sources": [
						{
							"fileName": "misc/memoize.ts",
							"line": 45,
							"character": 78
						}
					],
					"signatures": [
						{
							"id": 195,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Describe abstract memoization hash function. Memoization should have the same or compatible signature as the decorated function.\nHash function can return string or null as a hash result. Note: null is correct hash for arguments!\nIf the result is `undefined` - it means that the hash can not be generated."
							},
							"parameters": [
								{
									"id": 196,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "F"
											}
										],
										"name": "Parameters"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 184,
			"name": "MemoizedFn",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Memoized function type"
			},
			"sources": [
				{
					"fileName": "misc/memoize.ts",
					"line": 4,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 192,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 162,
						"name": "AnyToAnyFnSignature"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "T"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 185,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 186,
									"name": "cache",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Cache instance"
									},
									"sources": [
										{
											"fileName": "misc/memoize.ts",
											"line": 6,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "ReturnType"
											}
										],
										"name": "Map"
									}
								},
								{
									"id": 187,
									"name": "clear",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "misc/memoize.ts",
											"line": 8,
											"character": 2
										}
									],
									"signatures": [
										{
											"id": 188,
											"name": "clear",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Clear memoization cache"
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 189,
									"name": "has",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "misc/memoize.ts",
											"line": 10,
											"character": 2
										}
									],
									"signatures": [
										{
											"id": 190,
											"name": "has",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Check existence of cache for passed params"
											},
											"parameters": [
												{
													"id": 191,
													"name": "params",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "T"
															}
														],
														"name": "Parameters"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										186
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										187,
										189
									]
								}
							],
							"sources": [
								{
									"fileName": "misc/memoize.ts",
									"line": 4,
									"character": 60
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 244,
			"name": "OverrideDecoratorConfig",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Property configuration"
			},
			"sources": [
				{
					"fileName": "decorators/prop.ts",
					"line": 2,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 245,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 247,
									"name": "readonly",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "To define mutable property"
									},
									"sources": [
										{
											"fileName": "decorators/prop.ts",
											"line": 6,
											"character": 2
										}
									],
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 246,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Value to set in the prototype"
									},
									"sources": [
										{
											"fileName": "decorators/prop.ts",
											"line": 4,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										247,
										246
									]
								}
							],
							"sources": [
								{
									"fileName": "decorators/prop.ts",
									"line": 2,
									"character": 38
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 248,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 250,
									"name": "readonly",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "To define readonly property"
									},
									"sources": [
										{
											"fileName": "decorators/prop.ts",
											"line": 11,
											"character": 2
										}
									],
									"type": {
										"type": "literal",
										"value": true
									}
								},
								{
									"id": 249,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Value to set in the prototype"
									},
									"sources": [
										{
											"fileName": "decorators/prop.ts",
											"line": 9,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										250,
										249
									]
								}
							],
							"sources": [
								{
									"fileName": "decorators/prop.ts",
									"line": 7,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 332,
			"name": "PromisifyResultFn",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "async/promise.ts",
					"line": 109,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 336,
					"name": "F",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 162,
						"name": "AnyToAnyFnSignature"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 333,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "async/promise.ts",
							"line": 110,
							"character": 3
						}
					],
					"signatures": [
						{
							"id": 334,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates function type with the same signature but with the result type wrapped into promise"
							},
							"parameters": [
								{
									"id": 335,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "F"
											}
										],
										"name": "Parameters"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "F"
													}
												],
												"name": "ReturnType"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"id": 396,
					"name": "Debounced"
				},
				{
					"type": "reference",
					"id": 408,
					"name": "Throttled"
				}
			]
		},
		{
			"id": 550,
			"name": "ScrollStrategy",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "dom/scroll.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "none"
					},
					{
						"type": "literal",
						"value": "native"
					},
					{
						"type": "literal",
						"value": "pseudo"
					}
				]
			}
		},
		{
			"id": 518,
			"name": "ScrollType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "dom/rtl.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "default"
					},
					{
						"type": "literal",
						"value": "negative"
					},
					{
						"type": "literal",
						"value": "reverse"
					}
				]
			}
		},
		{
			"id": 500,
			"name": "ALT",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 7,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "Alt"
			},
			"defaultValue": "'Alt'"
		},
		{
			"id": 512,
			"name": "ARROW_DOWN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 22,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "ArrowDown"
			},
			"defaultValue": "'ArrowDown'"
		},
		{
			"id": 509,
			"name": "ARROW_LEFT",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 19,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "ArrowLeft"
			},
			"defaultValue": "'ArrowLeft'"
		},
		{
			"id": 511,
			"name": "ARROW_RIGHT",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 21,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "ArrowRight"
			},
			"defaultValue": "'ArrowRight'"
		},
		{
			"id": 510,
			"name": "ARROW_UP",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 20,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "ArrowUp"
			},
			"defaultValue": "'ArrowUp'"
		},
		{
			"id": 499,
			"name": "BACKSPACE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 5,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "Backspace"
			},
			"defaultValue": "'Backspace'"
		},
		{
			"id": 502,
			"name": "CONTROL",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 9,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "Control"
			},
			"defaultValue": "'Control'"
		},
		{
			"id": 506,
			"name": "DELETE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 14,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "Delete"
			},
			"defaultValue": "'Delete'"
		},
		{
			"id": 504,
			"name": "END",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 12,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "End"
			},
			"defaultValue": "'End'"
		},
		{
			"id": 496,
			"name": "ENTER",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 2,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "Enter"
			},
			"defaultValue": "'Enter'"
		},
		{
			"id": 497,
			"name": "ESC",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 3,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "Escape"
			},
			"defaultValue": "'Escape'"
		},
		{
			"id": 505,
			"name": "HOME",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 13,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "Home"
			},
			"defaultValue": "'Home'"
		},
		{
			"id": 508,
			"name": "PAGE_DOWN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 17,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "PageDown"
			},
			"defaultValue": "'PageDown'"
		},
		{
			"id": 507,
			"name": "PAGE_UP",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 16,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "PageUp"
			},
			"defaultValue": "'PageUp'"
		},
		{
			"id": 503,
			"name": "PAUSE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 11,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "Pause"
			},
			"defaultValue": "'Pause'"
		},
		{
			"id": 501,
			"name": "SHIFT",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 8,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "Shift"
			},
			"defaultValue": "'Shift'"
		},
		{
			"id": 498,
			"name": "SPACE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 4,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": " "
			},
			"defaultValue": "' '"
		},
		{
			"id": 495,
			"name": "TAB",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/keys.ts",
					"line": 1,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "Tab"
			},
			"defaultValue": "'Tab'"
		},
		{
			"id": 382,
			"name": "afterNextRender",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "async/raf.ts",
					"line": 6,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 383,
					"name": "afterNextRender",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Postpone action after next render"
					},
					"parameters": [
						{
							"id": 384,
							"name": "callback",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 385,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 386,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 257,
			"name": "aggregate",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "async/aggregate.ts",
					"line": 5,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 258,
					"name": "aggregate",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Aggregate is a function decorator that limits decorated function calls to one call in passed `time`.\nThe decorated function `callback` will be called once at the end of the timeout with the list of the first arguments in the calls."
					},
					"typeParameter": [
						{
							"id": 259,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 260,
							"name": "callback",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 261,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "async/aggregate.ts",
											"line": 5,
											"character": 39
										}
									],
									"signatures": [
										{
											"id": 262,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 263,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												},
												{
													"id": 264,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 265,
							"name": "time",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 266,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 267,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 268,
											"name": "arg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 213,
			"name": "bind",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "decorators/bind.ts",
					"line": 4,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 214,
					"name": "bind",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Decorator \"bind\" allows to bind prototype method context to class instance"
					},
					"typeParameter": [
						{
							"id": 215,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Function"
							}
						}
					],
					"parameters": [
						{
							"id": 216,
							"name": "target",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 217,
							"name": "propertyKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 218,
							"name": "descriptor",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "TypedPropertyDescriptor"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "T"
							}
						],
						"name": "TypedPropertyDescriptor"
					}
				}
			]
		},
		{
			"id": 293,
			"name": "createDeferred",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "async/promise.ts",
					"line": 97,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 294,
					"name": "createDeferred",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Create Deferred Object that wraps promise and its resolve and reject callbacks"
					},
					"typeParameter": [
						{
							"id": 295,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "T"
							}
						],
						"name": "Deferred"
					}
				}
			]
		},
		{
			"id": 574,
			"name": "createSequenceFinder",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/traversing.ts",
					"line": 7,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 575,
					"name": "createSequenceFinder",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Create function that finds next dom element, that matches selector, in the sequence declared by `next` function"
					},
					"parameters": [
						{
							"id": 576,
							"name": "next",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 577,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 578,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 579,
													"name": "el",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Element"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"name": "Element"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 580,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 581,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 582,
											"name": "base",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										},
										{
											"id": 583,
											"name": "sel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "Element"
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 391,
			"name": "debounce",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "async/debounce.ts",
					"line": 22,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 392,
					"name": "debounce",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Creates a debounced function that implements {@link Debounced}.\nDebounced function delays invoking func until after wait milliseconds have elapsed\nsince the last time the debounced function was invoked.\nThe func is invoked with the last arguments provided to the debounced function."
					},
					"typeParameter": [
						{
							"id": 393,
							"name": "F",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 162,
								"name": "AnyToAnyFnSignature"
							}
						}
					],
					"parameters": [
						{
							"id": 394,
							"name": "fn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "function to decorate"
							},
							"type": {
								"type": "reference",
								"name": "F"
							}
						},
						{
							"id": 395,
							"name": "wait",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "time to debounce\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "10"
						}
					],
					"type": {
						"type": "reference",
						"id": 396,
						"typeArguments": [
							{
								"type": "reference",
								"name": "F"
							}
						],
						"name": "Debounced"
					}
				}
			]
		},
		{
			"id": 181,
			"name": "defaultArgsHashFn",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "misc/memoize.ts",
					"line": 51,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 182,
					"name": "defaultArgsHashFn",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Default arguments hash function.\nSupports only 0-1 arguments with a primitive type."
					},
					"parameters": [
						{
							"id": 183,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			]
		},
		{
			"id": 596,
			"name": "findAll",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/traversing.ts",
					"line": 24,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 597,
					"name": "findAll",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "Array of all matching elements in subtree or empty array"
					},
					"parameters": [
						{
							"id": 598,
							"name": "base",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Element"
							}
						},
						{
							"id": 599,
							"name": "sel",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Element"
						}
					}
				}
			]
		},
		{
			"id": 600,
			"name": "findChildren",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/traversing.ts",
					"line": 28,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 601,
					"name": "findChildren",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "Array of all matching children or empty array"
					},
					"parameters": [
						{
							"id": 602,
							"name": "base",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Element"
							}
						},
						{
							"id": 603,
							"name": "sel",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Element"
						}
					}
				}
			]
		},
		{
			"id": 604,
			"name": "findClosestBy",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/traversing.ts",
					"line": 36,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 605,
					"name": "findClosestBy",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Find closest parent node of `node` by `predicate`.\nOptional `skipSelf` to skip initial node"
					},
					"parameters": [
						{
							"id": 606,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"name": "Node"
									}
								]
							}
						},
						{
							"id": 607,
							"name": "predicate",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 608,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 609,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 610,
													"name": "node",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Node"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 611,
							"name": "skipSelf",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Node"
							}
						]
					}
				}
			]
		},
		{
			"id": 584,
			"name": "findNext",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/traversing.ts",
					"line": 17,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 585,
					"name": "findNext",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "first matching next sibling or null"
					},
					"parameters": [
						{
							"id": 586,
							"name": "base",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Element"
							}
						},
						{
							"id": 587,
							"name": "sel",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Element"
							}
						]
					}
				}
			]
		},
		{
			"id": 592,
			"name": "findParent",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/traversing.ts",
					"line": 21,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 593,
					"name": "findParent",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "first matching parent or null"
					},
					"parameters": [
						{
							"id": 594,
							"name": "base",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Element"
							}
						},
						{
							"id": 595,
							"name": "sel",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Element"
							}
						]
					}
				}
			]
		},
		{
			"id": 588,
			"name": "findPrev",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/traversing.ts",
					"line": 19,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 589,
					"name": "findPrev",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "first matching previous sibling or null"
					},
					"parameters": [
						{
							"id": 590,
							"name": "base",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Element"
							}
						},
						{
							"id": 591,
							"name": "sel",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Element"
							}
						]
					}
				}
			]
		},
		{
			"id": 428,
			"name": "getDocument",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/api.ts",
					"line": 5,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 429,
					"name": "getDocument",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Get the Element that is the root element of the document."
					},
					"parameters": [
						{
							"id": 430,
							"name": "element",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "element for which to get the document element\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Window"
									},
									{
										"type": "reference",
										"name": "Element"
									}
								]
							},
							"defaultValue": "..."
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			]
		},
		{
			"id": 536,
			"name": "getListScrollParents",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "dom/scroll.ts",
					"line": 62,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 537,
					"name": "getListScrollParents",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Get the list of all scroll parents, up the list of ancestors until we get to the top window object."
					},
					"parameters": [
						{
							"id": 538,
							"name": "element",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "element for which you want to get the list of all scroll parents"
							},
							"type": {
								"type": "reference",
								"name": "Node"
							}
						},
						{
							"id": 539,
							"name": "list",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "array of elements to concatenate with the list of all scroll parents of element (optional)\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Element"
								}
							},
							"defaultValue": "[]"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Element"
						}
					}
				}
			]
		},
		{
			"id": 431,
			"name": "getNodeName",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/api.ts",
					"line": 13,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 432,
					"name": "getNodeName",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Get the name of node."
					},
					"parameters": [
						{
							"id": 433,
							"name": "element",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "element for which to get the name\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Window"
									},
									{
										"type": "reference",
										"name": "Node"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 434,
			"name": "getParentNode",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/api.ts",
					"line": 21,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 435,
					"name": "getParentNode",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Get the parent of the specified element in the DOM tree."
					},
					"parameters": [
						{
							"id": 436,
							"name": "element",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "element for which to get the parent\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Element"
									},
									{
										"type": "reference",
										"name": "ShadowRoot"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Node"
					}
				}
			]
		},
		{
			"id": 540,
			"name": "getScrollParent",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "dom/scroll.ts",
					"line": 79,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 541,
					"name": "getScrollParent",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Get the scroll parent of the specified element in the DOM tree."
					},
					"parameters": [
						{
							"id": 542,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "element for which to get the scroll parent\n"
							},
							"type": {
								"type": "reference",
								"name": "Node"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			]
		},
		{
			"id": 665,
			"name": "getWindow",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "dom/window.ts",
					"line": 7,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 666,
					"name": "getWindow",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Get the window object associated with a document of the specified element."
					},
					"parameters": [
						{
							"id": 667,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "element for which to get window\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Node"
									},
									{
										"type": "reference",
										"name": "Window"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Window"
					}
				}
			]
		},
		{
			"id": 668,
			"name": "getWindowRect",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "dom/window.ts",
					"line": 18,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 669,
					"name": "getWindowRect",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Get the size and position of the window.",
						"returns": "\n"
					},
					"parameters": [
						{
							"id": 670,
							"name": "wnd",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Window"
							},
							"defaultValue": "..."
						}
					],
					"type": {
						"type": "reference",
						"name": "Rect"
					}
				}
			]
		},
		{
			"id": 490,
			"name": "handleFocusChain",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/focus.ts",
					"line": 7,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 491,
					"name": "handleFocusChain",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Chain focus order between passed elements.\nPassive (should be called inside keyboard event handler)"
					},
					"parameters": [
						{
							"id": 492,
							"name": "e",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "KeyboardEvent"
							}
						},
						{
							"id": 493,
							"name": "first",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 494,
							"name": "last",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "literal",
								"value": true
							}
						]
					}
				}
			]
		},
		{
			"id": 570,
			"name": "isRelativeNode",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dom/traversing.ts",
					"line": 2,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 571,
					"name": "isRelativeNode",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Check that `nodeA` and `nodeB` are from the same tree path"
					},
					"parameters": [
						{
							"id": 572,
							"name": "nodeA",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"name": "Node"
									}
								]
							}
						},
						{
							"id": 573,
							"name": "nodeB",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"name": "Node"
									}
								]
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				}
			]
		},
		{
			"id": 543,
			"name": "isScrollParent",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "dom/scroll.ts",
					"line": 95,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 544,
					"name": "isScrollParent",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Check that element is scroll parent."
					},
					"parameters": [
						{
							"id": 545,
							"name": "element",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "element for checking\n"
							},
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 532,
			"name": "loadScript",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "dom/script.ts",
					"line": 17,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 533,
					"name": "loadScript",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Common function that loads script async"
					},
					"parameters": [
						{
							"id": 534,
							"name": "id",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "unique script id that is used as a marker to prevent future load"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 535,
							"name": "src",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "script src (url) to load\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Event"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 219,
			"name": "memoize",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"decorates": [
				{
					"type": "reference",
					"id": 523,
					"name": "scrollType"
				}
			],
			"sources": [
				{
					"fileName": "decorators/memoize.ts",
					"line": 7,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 220,
					"name": "memoize",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "MethodDecorator"
					}
				},
				{
					"id": 221,
					"name": "memoize",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 222,
							"name": "H",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 193,
								"typeArguments": [
									{
										"type": "reference",
										"id": 162,
										"name": "AnyToAnyFnSignature"
									}
								],
								"name": "MemoHashFn"
							}
						}
					],
					"parameters": [
						{
							"id": 223,
							"name": "hashFn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "H"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 166,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 224,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "decorators/memoize.ts",
											"line": 8,
											"character": 79
										}
									],
									"signatures": [
										{
											"id": 225,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 226,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "H"
															}
														],
														"name": "Parameters"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						],
						"name": "MethodTypedDecorator"
					}
				}
			]
		},
		{
			"id": 176,
			"name": "memoizeFn",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "misc/memoize.ts",
					"line": 18,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 177,
					"name": "memoizeFn",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Memoization decorator function. Caches the original function result according to hash generated from arguments.\nIn case the hash function returns `undefined` value will not be memoized.",
						"tags": [
							{
								"tag": "see",
								"text": "MemoHashFn Hash function signature.\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 178,
							"name": "F",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 162,
								"name": "AnyToAnyFnSignature"
							}
						}
					],
					"parameters": [
						{
							"id": 179,
							"name": "fn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "F"
							}
						},
						{
							"id": 180,
							"name": "hashFn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 193,
								"typeArguments": [
									{
										"type": "reference",
										"name": "F"
									}
								],
								"name": "MemoHashFn"
							},
							"defaultValue": "..."
						}
					],
					"type": {
						"type": "reference",
						"id": 184,
						"typeArguments": [
							{
								"type": "reference",
								"name": "F"
							}
						],
						"name": "MemoizedFn"
					}
				}
			]
		},
		{
			"id": 513,
			"name": "onDocumentReady",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "dom/ready.ts",
					"line": 4,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 514,
					"name": "onDocumentReady",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Execute callback in bounds of the next task with dom ready state precondition"
					},
					"parameters": [
						{
							"id": 515,
							"name": "callback",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 516,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "dom/ready.ts",
											"line": 4,
											"character": 42
										}
									],
									"signatures": [
										{
											"id": 517,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 274,
			"name": "promisifyEvent",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "async/promise.ts",
					"line": 31,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 275,
					"name": "promisifyEvent",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "Promise that will be resolved by dispatching `event` on `target`\nOr it will be rejected in `timeout` if it's specified\nOptional `options` for addEventListener can be also specified\n"
					},
					"parameters": [
						{
							"id": 276,
							"name": "target",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 304,
								"name": "ListenableTarget"
							}
						},
						{
							"id": 277,
							"name": "event",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 278,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 279,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AddEventListenerOptions"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Event"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 280,
			"name": "promisifyMarker",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "async/promise.ts",
					"line": 56,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 281,
					"name": "promisifyMarker",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Short helper to make Promise from element state marker",
						"returns": "Promise that will be resolved if the target `marker` property is truthful or `event` is dispatched",
						"tags": [
							{
								"tag": "example",
								"text": "\n`const imgReady = promisifyMarker(eslImage, 'ready');`\n"
							}
						]
					},
					"parameters": [
						{
							"id": 282,
							"name": "target",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 283,
							"name": "marker",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 284,
							"name": "event",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "..."
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLElement"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 269,
			"name": "promisifyTimeout",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "async/promise.ts",
					"line": 6,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 270,
					"name": "promisifyTimeout",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "Promise that will be resolved in `timeout` with optional `payload`\n"
					},
					"typeParameter": [
						{
							"id": 271,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 272,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 273,
							"name": "payload",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "T"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "T"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 237,
			"name": "prop",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "decorators/prop.ts",
					"line": 26,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 238,
					"name": "prop",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "`@prop` is auxiliary decorator to define a field on the prototype level.\n` @prop` can be used to override decorated property from the parent level",
						"text": "You can also use an @override decorator in combination with ECMA Script class property definition:\n`@prop() public field: any = initial value;`\n\nThe class property initial value is a part of object creation, so it goes to the object itself,\nwhile the @override value is defined on the prototype level.\n"
					},
					"parameters": [
						{
							"id": 239,
							"name": "prototypeConfig",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "prototype property configuration\n"
							},
							"type": {
								"type": "reference",
								"id": 244,
								"name": "OverrideDecoratorConfig"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 240,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 241,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 242,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 243,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 387,
			"name": "rafDecorator",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "async/raf.ts",
					"line": 12,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 388,
					"name": "rafDecorator",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Decorate function to schedule execution after next render",
						"returns": "decorated function\n"
					},
					"typeParameter": [
						{
							"id": 389,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 158,
								"name": "AnyToVoidFnSignature"
							}
						}
					],
					"parameters": [
						{
							"id": 390,
							"name": "fn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "T"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "T"
					}
				}
			]
		},
		{
			"id": 251,
			"name": "ready",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "decorators/ready.ts",
					"line": 5,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 252,
					"name": "ready",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Defer method execution to the next task with dom ready state precondition"
					},
					"typeParameter": [
						{
							"id": 253,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 158,
								"name": "AnyToVoidFnSignature"
							}
						}
					],
					"parameters": [
						{
							"id": 254,
							"name": "target",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 255,
							"name": "propertyKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 256,
							"name": "descriptor",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "TypedPropertyDescriptor"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 300,
			"name": "rejectPromise",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "async/promise.ts",
					"line": 126,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 301,
					"name": "rejectPromise",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Safe wrap for Promise.reject to use in Promise chain",
						"tags": [
							{
								"tag": "example",
								"text": "\n`const rejectedPromise = resolvedPromise.then(rejectPromise);`\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 302,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					],
					"parameters": [
						{
							"id": 303,
							"name": "arg",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "T"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "PromiseLike"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "T"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 296,
			"name": "resolvePromise",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "async/promise.ts",
					"line": 117,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 297,
					"name": "resolvePromise",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Safe wrap for Promise.resolve to use in Promise chain",
						"tags": [
							{
								"tag": "example",
								"text": "\n`const resolvedPromise = rejectedPromise.catch(resolvePromise);`\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 298,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 299,
							"name": "arg",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "T"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "PromiseLike"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "T"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 546,
			"name": "scrollIntoViewAsync",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "dom/scroll.ts",
					"line": 109,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 547,
					"name": "scrollIntoViewAsync",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "This is a promise-based version of scrollIntoView().\nMethod scrolls the element's parent container such that the element on which\nscrollIntoView() is called is visible to the user. The promise is resolved when\nthe element became visible to the user."
					},
					"parameters": [
						{
							"id": 548,
							"name": "element",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "element to be made visible to the user"
							},
							"type": {
								"type": "reference",
								"name": "Element"
							}
						},
						{
							"id": 549,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "scrollIntoView options\n"
							},
							"type": {
								"type": "reference",
								"name": "ScrollIntoViewOptions"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 403,
			"name": "throttle",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "async/throttle.ts",
					"line": 18,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 404,
					"name": "throttle",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Creates a throttled executed function.\nThe func is invoked with the last arguments provided to the throttled function."
					},
					"typeParameter": [
						{
							"id": 405,
							"name": "F",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 162,
								"name": "AnyToAnyFnSignature"
							}
						}
					],
					"parameters": [
						{
							"id": 406,
							"name": "fn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "function to decorate"
							},
							"type": {
								"type": "reference",
								"name": "F"
							}
						},
						{
							"id": 407,
							"name": "threshold",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "indicates how often function could be called\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "250"
						}
					],
					"type": {
						"type": "reference",
						"id": 408,
						"typeArguments": [
							{
								"type": "reference",
								"name": "F"
							}
						],
						"name": "Throttled"
					}
				}
			]
		},
		{
			"id": 285,
			"name": "tryUntil",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "async/promise.ts",
					"line": 65,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 286,
					"name": "tryUntil",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Call `callback` limited by `tryCount` amount of times with interval in `timeout` ms",
						"returns": "Promise that will be resolved as soon as callback returns truthy value, or reject it by limit.\n"
					},
					"typeParameter": [
						{
							"id": 287,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 288,
							"name": "callback",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 289,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "async/promise.ts",
											"line": 65,
											"character": 38
										}
									],
									"signatures": [
										{
											"id": 290,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									]
								}
							}
						},
						{
							"id": 291,
							"name": "tryCount",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "2"
						},
						{
							"id": 292,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "100"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "T"
							}
						],
						"name": "Promise"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"kind": 2,
			"children": [
				12,
				120,
				147,
				173,
				39,
				1,
				227
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				437,
				413,
				671,
				466,
				198,
				337,
				519,
				551,
				612
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				396,
				463,
				408
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				322,
				304,
				193,
				184,
				244,
				332,
				550,
				518
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				500,
				512,
				509,
				511,
				510,
				499,
				502,
				506,
				504,
				496,
				497,
				505,
				508,
				507,
				503,
				501,
				498,
				495
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				382,
				257,
				213,
				293,
				574,
				391,
				181,
				596,
				600,
				604,
				584,
				592,
				588,
				428,
				536,
				431,
				434,
				540,
				665,
				668,
				490,
				570,
				543,
				532,
				219,
				176,
				513,
				274,
				280,
				269,
				237,
				387,
				251,
				300,
				296,
				546,
				403,
				285
			]
		}
	],
	"sources": [
		{
			"fileName": "all.ts",
			"line": 2,
			"character": 0
		}
	]
}