---
layout: content
title: Image
seoTitle: Lazy-loaded configurable images examples based on ESL web components
name: Image
tags: [examples, playground]
icon: examples/image.svg
aside:
  components:
    - esl-image
---
{% import 'lorem.njk' as lorem %}

{% set imageSrcBase = '/assets/' | url %}

<section class="row">
  <div class="col-12">
    <uip-root>
      <script type="text/html"
              label="Save ratio mode"
              uip-snippet
              uip-snippet-js="js-snippet-image-element">
        <div class="d-flex">
          <div class="col-sm-6">
            <esl-image mode="save-ratio" lazy
                       data-alt="Alt Text Test"
                       data-src="nature/forest+clouds.jpg"
                       data-src-base="{{ imageSrcBase }}"></esl-image>
          </div>
          <div class="col-sm-6">
            <h3>Mode: save-ratio</h3>
            <p>ESL Image uses the entire available width and occupies the height according to the image aspect ratio.</p>
            <p>No inner image, css background is used to render the image.</p>
          </div>
        </div>
      </script>

      <script type="text/html"
              label="Fit mode"
              uip-snippet
              uip-snippet-js="js-snippet-image-element">
        <div class="d-flex">
          <div class="col-sm-6">
            <style>
              .img-container.img-container-2-1 {
                padding-top: 50%;
              }

              .img-container.img-container-2-3 {
                padding-top: 100%;
                width: 66.66%;
              }
            </style>
            <div class="img-container m-auto img-container-16-9">
              <esl-image class="simple-image"
                         mode="fit" lazy
                         data-alt="Alt Text Test"
                         data-src="nature/forest+clouds.jpg"
                         data-src-base="{{ imageSrcBase }}"></esl-image>
            </div>
          </div>
          <div class="col-sm-6">
            <h3>Mode: fit</h3>
            <p>ESL Image uses inner <em>img</em> to render picture and is used as a wrapper that controls
              image source and state.</p>
          </div>
        </div>
      </script>

      <script type="text/html"
              label="Origin mode"
              uip-snippet
              uip-snippet-js="js-snippet-image-element">
        <div class="d-flex">
          <div class="d-flex col-sm-6">
            <esl-image mode="origin"
                       class="m-auto"
                       data-alt="Alt Text Test"
                       data-src="nature/volcano-xs.jpg"
                       data-src-base="{{ imageSrcBase }}"></esl-image>
          </div>
          <div class="col-sm-6">
            <h3>Mode: origin</h3>
            <p>Origin mode behaves similarly to the fit mode but sets esl-image size according to inner image
              original size.</p>
          </div>
        </div>
      </script>

      <script type="text/html"
              label="Cover mode"
              uip-snippet
              uip-snippet-js="js-snippet-image-element">
        <div class="d-flex">
          <div class="col-sm-6">
            <style>
              .img-container.img-container-2-1 {
                padding-top: 50%;
              }

              .img-container.img-container-2-3 {
                padding-top: 100%;
                width: 66.66%;
              }
            </style>
            <div class="img-container m-auto img-container-4-3">
              <esl-image class="cover-mode-image bg-v-center bg-h-center"
                         mode="cover" lazy
                         data-alt="Alt Text"
                         data-src="nature/forest+clouds.jpg"
                         data-src-base="{{ imageSrcBase }}"></esl-image>
            </div>
          </div>
          <div class="col-sm-6">
            <h3>Mode: cover</h3>
            <p>No inner image, image is rendered by background image.</p>
            <p>ESL Image has no own size. Can be used with img-container classes</p>
            <p><b>Inscribe</b> can be used to declare inscribe image behaviour</p>
          </div>
        </div>
      </script>

      <script type="text/html"
              label="SVG Inline loading"
              uip-snippet
              uip-snippet-js="js-snippet-image-element">
        <div class="d-flex">
          <div class="col-sm-6">
            <style>
              .img-container.img-container-2-1 {
                padding-top: 50%;
              }

              .img-container.img-container-2-3 {
                padding-top: 100%;
                width: 66.66%;
              }
            </style>
            <div class="img-container m-auto img-container-2-3">
              <esl-image lazy
                         mode="inner-svg"
                         data-alt="Svg Text Test"
                         data-src="{{ '/assets/svg/cat.svg' | url }}"></esl-image>
            </div>
          </div>
          <div class="col-sm-6">
            <h3>Mode: inner-svg, lazy mode</h3>
            <p>ESL Image inner-svg mode that loads svg content inline.</p>
            <p class="alert alert-info">NOTE: requesting svg endpoint should accept CORS policy restrictions</p>
          </div>
          </div>
        </div>
      </script>

      <script type="text/html"
              label="ESL Query Rules"
              uip-snippet
              uip-snippet-js="js-snippet-image-element">
        <div class="d-flex">
          <div class="col-sm-6">
            <style>
              .img-container.img-container-2-1 {
                padding-top: 50%;
              }

              .img-container.img-container-2-3 {
                padding-top: 100%;
                width: 66.66%;
              }
            </style>
            <div class="img-container m-auto img-container-16-9">
              <esl-image lazy
                         mode="cover"
                         onload="console.log('SImage Load Track', event)"
                         onready="console.log('SImage Ready Track', event)"
                         data-alt="Alt Text Test"
                         data-src="@XS => abstract/colors.jpg |
                                      @SM => abstract/drops.jpg |
                                      @MD => abstract/unsplash.jpg |
                                      @LG => abstract/colors.jpg |
                                      @XL => abstract/drops.jpg"
                         data-src-base="{{ imageSrcBase }}"></esl-image>
            </div>
          </div>
          <div class="col-sm-6">
            <h3>ESL Query Rules</h3>
            <p>Change the image depending on the screen resolution</p>
          </div>
        </div>
      </script>

      <script id="js-snippet-image-element" type="text/plain">
        import { ESLImage } from '@exadel/esl';
        ESLImage.register();
      </script>

      <uip-snippets class="uip-toolbar" dropdown-view="@xs"></uip-snippets>
      <uip-preview></uip-preview>
      <uip-settings label="Settings" resizable vertical="@+sm">
        <uip-select-setting target=".img-container" label="Image ratio:" attribute="class" mode="append">
          <option value="img-container-16-9">16 x 9</option>
          <option value="img-container-4-3">4 x 3</option>
          <option value="img-container-2-1">2 x 1</option>
          <option value="img-container-2-3">2 x 3</option>
          <option value="img-container-1-1">1 x 1</option>
        </uip-select-setting>
        <uip-select-setting target=".cover-mode-image" label="Image vertical alignment:" attribute="class" mode="append">
          <option value="bg-v-top">bg-v-top</option>
          <option value="bg-v-center">bg-v-center</option>
          <option value="bg-v-bottom">bg-v-bottom</option>
        </uip-select-setting>
        <uip-select-setting target=".cover-mode-image" label="Image horizontal alignment:" attribute="class" mode="append">
          <option value="bg-h-left">bg-h-left</option>
          <option value="bg-h-center">bg-h-center</option>
          <option value="bg-h-right">bg-h-right</option>
        </uip-select-setting>
        <uip-bool-setting label="Border" target=".img-container" mode="append" attribute="class" value="border"></uip-bool-setting>
        <uip-bool-setting label="Inscribe" target=".cover-mode-image" mode="append" attribute="class" value="bg-inscribe"></uip-bool-setting>
      </uip-settings>
      <uip-editor label="Source code (HTML)" collapsible copy></uip-editor>
      <uip-editor source="js" label="Source code (JS)" collapsible collapsed copy></uip-editor>
    </uip-root>
  </div>
</section>
