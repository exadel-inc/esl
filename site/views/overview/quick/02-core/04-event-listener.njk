---
title: ESL Event Listeners
hash: event-listeners
tags: overview-quick
parent: 00-core
---

<h3>{{ title }}</h3>
<p>
  ESL Event Listener is an embedded ESL module that take care of the event listeners management and provide extended utilities to work with events.
  ESL provides ability to register event listeners in declarative way using TS <code>@listen</code> decorator.
  Module supports event delegation, custom event targets. Listeners registration works on the "host" concept that allows you to link the listener to the specific component instance (to manage subscriptions automatically.
</p>

{% code 'typescript', 'code-block' %}
  class MyComponent extends ESLBaseElement {
    @listen('click')
    onClick(event) {
      console.log('Component clicked', event);
    }

    @listen({event: 'click', selector: 'button'})
    onBtnClick(event) {
      console.log('Button click catched with delegation', event);
    }

    @listen({event: 'resize', target: ESLResizeObserverTarget.for})
    onResize(event) {
      console.log('Component resized', event);
    }
  }
{% endcode %}
