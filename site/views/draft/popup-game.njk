---
layout: content
title: Popup game
seoTitle: Popup UI examples based on ESL web components
name: Popup game
tags: [draft]
icon: examples/popup.svg
aside:
  components:
    - esl-popup
    - esl-toggleable
    - esl-trigger
---

<style>
  esl-d-popup-game {
    --_font-size: calc(min(var(--_height, 300px), var(--_width, 300px)) / 3);
    position: relative;
    display: inline-block;
    min-height: 300px;
    height: 95%;
    width: 100%;
    border: 1px solid #000;
    background-color: #fff;
  }
  esl-d-popup-game:before, esl-d-popup-game:after {
    position: absolute;
    font-size: var(--_font-size);
    display: inline-block;
    opacity: 0.3;
  }
  esl-d-popup-game:before {
    content: 'üåí';
  }
  esl-d-popup-game:after {
    content: 'ü™ê';
    bottom: 0;
    right: 0;
  }
  .game-popup-trigger {
    position: absolute;
    z-index: 1;
    padding: 2px 6px;
    border: none;
    border-radius: 50%;
    box-shadow: none !important;
    background-color: #bce0ff45;
    font-size: 2rem;
  }
  .popup-game {
    --_margin-arrow: 35px;
  }
  .popup-h[dir="rtl"] {
    text-align: right;
  }
  .popup-content-wrapper {
    display: flex;
  }
  .popup-v .popup-content-wrapper {
    writing-mode: vertical-rl;
  }
  .popup-v .popup-content-wrapper {
    min-width: 50px;
    height: 250px;
    width: auto;
  }
  .popup-h .popup-content-wrapper {
    min-height: 50px;
    height: auto;
    width: 250px;
  }
  .popup-content-wrapper:before,
  .popup-content-wrapper:after {
    content: '';
    display: block;
    flex: 0 0 var(--_margin-arrow);
  }
  .popup-content {
    flex: 1;
    margin: auto;
  }

  .popup-content[collapsed] :is(.popup-g-hide-btn, .popup-g-text),
  .popup-content:not([collapsed]) :is(.popup-g-continue-btn, .popup-g-text-preview) {
    display: none !important;
  }
  
</style>

<p>This cool game will let you play with a popup.</p>
<p>Drag a trigger element and watch how the popup and its arrow move. Use the mouse wheel to resize the container. Use shift to switch the resize direction.</p>
<p>The green area on the edges of the container is determined by the offsetContainer value and means the safe zone in which popup can't come. The red zone on the edges of popup demonstrates the limits of arrow placement.</p>
<section class="row">
  <div class="col-12">
    <uip-root>
      <script type="text/html"
              label="Horizontal"
              uip-snippet
              uip-snippet-js="js-snippet-popup-game">
        <esl-d-popup-game trigger="::find(.game-popup-trigger)">
          <esl-trigger
            target="#game-popup"
            mode="toggle"
            class="game-popup-trigger">
            üöÄ
          </esl-trigger>
        </esl-d-popup-game>
        <esl-popup
          id="game-popup"
          class="popup-game popup-h"
          position="top"
          container=".uip-preview-inner"
          dir="ltr"
          margin-arrow="35">
          <div class="popup-content-wrapper">
            <div collapsed class="popup-content">
              <a class="popup-g-hide-btn" href="javascript:void(0)" role="button">collapse</a>
              <p class="popup-g-text-preview">Lorem ipsum dolor...</p>
              <lorem-ipsum class="popup-g-text" paragraphs="1"></lorem-ipsum>
              <a class="popup-g-continue-btn" href="javascript:void(0)" role="button">expand</a>
            </div>
          </div>
          <span class="esl-popup-arrow"></span>
        </esl-popup>
      </script>

      <script id="js-snippet-popup-game" type="text/plain">
        import { ESLPopup, ESLTrigger } from '@exadel/esl';
        ESLPopup.register();
        ESLTrigger.register();
      </script>

      <script>
        function _onClick() {
          document.querySelector('.popup-content').toggleAttribute('collapsed');
        }

        document.querySelector('uip-root').addEventListener('uip:change', () => onUIPChange());

        async function onUIPChange() {
          await Promise.resolve();
          document.querySelector('.popup-g-continue-btn').addEventListener('click', () => _onClick());
          document.querySelector('.popup-g-hide-btn').addEventListener('click', () => _onClick());
        }
      </script>

      <uip-snippets class="uip-toolbar" dropdown-view="@xs"></uip-snippets>
      <uip-preview resizable></uip-preview>
      <uip-settings target="esl-popup" label="Settings" resizable vertical="@+sm">
        <uip-select-setting label="Position" target="esl-popup" attribute="position">
          <option value="top">Top</option>
          <option value="bottom">Bottom</option>
          <option value="left">Left</option>
          <option value="right">Right</option>
        </uip-select-setting>
        <uip-select-setting label="Orientation" target="esl-popup" attribute="class" mode="append">
          <option value="popup-v">Vertical</option>
          <option value="popup-h">Horizontal</option>
        </uip-select-setting>

        <uip-bool-setting label="RTL" target=".popup-h" attribute="dir" value="rtl"></uip-bool-setting>
      </uip-settings>
      <uip-editor label="Source code (HTML)" collapsible copy></uip-editor>
      <uip-editor source="js" label="Source code (JS)" collapsible collapsed copy></uip-editor>
    </uip-root>
  </div>
</section>
