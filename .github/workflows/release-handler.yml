name: Release (Stable)

on:
  pull_request:
    types: [ closed ]

permissions:
  contents: write
  packages: write

env:
  branch: main
  node-version: 20.x

jobs:
  release:
    if: github.event.pull_request.merged == true &&
        github.event.pull_request.base.ref == 'main' &&
        github.event.pull_request.head.ref == 'release/main'
    name: Release (Tag & GitHub Release)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install NPM Dependencies
        run: npm ci

      - name: Resolve Version
        id: info
        uses: actions/github-script@v7
        with:
          script: |
            const version = require('./lerna.json').version;
            console.log('Version:', version);
            core.setOutput('version', version);

      - name: Create Tag
        run: |
          git tag -a v${{ steps.info.outputs.version }} -m "chore(release): v${{ steps.info.outputs.version }}"
          git push origin v${{ steps.info.outputs.version }} --no-verify

      - name: Build Tarballs
        run: npm run pack

      - name: Build Release Notes
        id: release-notes
        run: npm run version:notes

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          name: v${{ steps.info.outputs.version }}
          tag: v${{ steps.info.outputs.version }}
          bodyFile: 'RELEASE_NOTES.md'
          token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    if: github.event.pull_request.merged == true &&
        github.event.pull_request.base.ref == 'main' &&
        github.event.pull_request.head.ref == 'release/main'
    name: Publish (NPM)
    runs-on: ubuntu-latest
    needs:
      - release

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install NPM Dependencies
        run: npm ci

      - name: Publish to NPM
        run: lerna publish from-package --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
