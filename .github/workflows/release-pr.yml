name: Release PR

on:
  push:
    branches: [ main, main-beta ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  node-version: 20.x

concurrency:
  group: release-pr-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release-pr:
    name: Release Please
    runs-on: ubuntu-latest

    env:
      TARGET_BRANCH: ${{ github.ref == 'refs/heads/main' && 'release/main' || 'release/main-beta' }}

    steps:
      - name: Deep Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node v${{ env.node-version }}
        uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version: ${{ env.node-version }}

      - name: Install NPM Dependencies
        run: npm ci

      - name: Check if current version created
        id: preversion
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            const version = require('./package.json').version;
            const tag = `v${version}`;
            const result = execSync(`git ls-remote --tags origin | grep "refs/tags/${tag}" | wc -l`).toString().trim();
            if (+result > 0) core.setOutput('allowed', true);

      - name: Stable Version Bump (Lerna)
        if: ${{ github.ref == 'refs/heads/main' && steps.preversion.outputs.allowed }}
        run: npm run release:stable

      - name: Beta Version Bump (Lerna)
        if: ${{ github.ref != 'refs/heads/main' && steps.preversion.outputs.allowed }}
        run: npm run release:beta

      - name: Bump root package version
        if: ${{ steps.preversion.outputs.allowed }}
        run: npm run version:root

      - name: Store the new version
        if: ${{ steps.preversion.outputs.allowed }}
        id: info
        uses: actions/github-script@v7
        with:
          script: |
            const version = require('./package.json').version;
            console.log('Current version:', version);
            core.setOutput('version', version);

      - name: Generate Release Notes
        if: ${{ steps.info.outputs.version && steps.preversion.outputs.allowed }}
        run: |
          echo "This is an automated Release PR for version v${{ steps.info.outputs.version }}." > PR_MESSAGE.tmp.md
          echo "" >> PR_MESSAGE.tmp.md
          npm run --silent version:notes >> PR_MESSAGE.tmp.md

      # Open a PR from release/main to main
      - if: ${{ steps.info.outputs.version && steps.preversion.outputs.allowed }}
        name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          branch: ${{ env.TARGET_BRANCH }}
          title: "Auto Bump: ${{ env.TARGET_BRANCH }} â†’ ${{ github.ref }} (v${{ steps.info.outputs.version }})"
          commit-message: 'chore: release v${{ steps.info.outputs.version }}'
          body-path: "PR_MESSAGE.tmp.md"
          draft: true
          labels: "automated-pr"
          assignees: "ala-n, abarmina, NastaLeo"
