name: Release Handler (NPM)

on:
  workflow_dispatch:
    inputs:
      package:
        description: 'Nx project name for direct publish or "all" for multi-project release'
        required: false
        type: choice
        options:
          - all
          - esl
          - eslint-config
          - eslint-plugin
          - stylelint-config
          - uip
        default: all

env:
  node-version: 22.x

permissions:
  contents: read
  id-token: write

jobs:
  publish:
    name: Publish (NPM)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          filter: tree:0

      - name: Use Node v${{ env.node-version }}
        uses: actions/setup-node@v6
        with:
          cache: 'npm'
          node-version: ${{ env.node-version }}
          registry-url: 'https://registry.npmjs.org'

      # Critical: ensure latest NPM version for OIDC provenance support (older npm versions break --provenance and id-token flow)
      - name: Ensure latest NPM is used
        run: |
          npm install -g npm@latest
          echo "NPM version: $(npm --version)"

      - name: Install NPM Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Print Environment Info
        run: npx nx report
        shell: bash

      - name: Resolve Distribution Tag
        id: tag
        shell: bash
        run: |
          if [ "${{ github.event.inputs.package }}" != "" ] && [ "${{ github.event.inputs.package }}" != "all" ]; then
            echo "Resolving dist-tag for project: ${{ github.event.inputs.package }}"
            DIST_TAG=$(npm run --silent get:disttag -- "${{ github.event.inputs.package }}")
          else
            echo "Resolving overall dist-tag (multi-project)"
            DIST_TAG=$(npm run --silent get:disttag)
          fi
          echo "Resolved dist-tag: $DIST_TAG"
          echo "tag=$DIST_TAG" >> "$GITHUB_OUTPUT"

      - name: Publish via NX (single project)
        if: github.event.inputs.package != 'all' && github.event.inputs.package != ''
        run: npx nx release publish --projects=${{ github.event.inputs.package }} --tag=${{ steps.tag.outputs.tag }} --verbose
        shell: bash
        env:
          NPM_CONFIG_PROVENANCE: true

      - name: Publish via NX (multi-project)
        if: github.event.inputs.package == '' || github.event.inputs.package == 'all'
        run: npx nx release publish --tag=${{ steps.tag.outputs.tag }} --verbose
        shell: bash
        env:
          NPM_CONFIG_PROVENANCE: true
